// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// backgroundModel2
List backgroundModel2(NumericVector angles, NumericVector R, int nsamples, int samplesize, NumericVector anglesoi, double bw);
RcppExport SEXP _triwise_backgroundModel2(SEXP anglesSEXP, SEXP RSEXP, SEXP nsamplesSEXP, SEXP samplesizeSEXP, SEXP anglesoiSEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type angles(anglesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< int >::type samplesize(samplesizeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type anglesoi(anglesoiSEXP);
    Rcpp::traits::input_parameter< double >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(backgroundModel2(angles, R, nsamples, samplesize, anglesoi, bw));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_triwise_backgroundModel2", (DL_FUNC) &_triwise_backgroundModel2, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_triwise(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
